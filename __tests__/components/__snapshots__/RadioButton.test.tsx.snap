// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioButton action tests should call onPress when radio button is pressed 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  delayLongPress={600}
  enabled={true}
  exclusive={true}
  handlerTag={6}
  handlerType="NativeViewGestureHandler"
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="radioButton"
  touchSoundDisabled={false}
>
  <View
    accessible={true}
    collapsable={false}
    style={
      {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "gap": 8,
        "opacity": 1,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "white",
          "borderColor": "#d81e8b",
          "borderRadius": 999,
          "borderWidth": 2,
          "display": "flex",
          "padding": 3.5,
        }
      }
      testID="radioButtonCircle"
    >
      <View
        style={
          {
            "backgroundColor": "transparent",
            "borderRadius": 7,
            "height": 14,
            "width": 14,
          }
        }
        testID="radioButtonCircleInner"
      />
    </View>
    <Text
      style={
        {
          "color": "#000000",
          "display": "flex",
          "flexDirection": "row",
          "fontSize": 14,
        }
      }
      testID="radioButtonLabel"
    />
  </View>
</RNGestureHandlerButton>
`;

exports[`RadioButton action tests should call onPress when radio button is pressed and selected 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  delayLongPress={600}
  enabled={true}
  exclusive={true}
  handlerTag={7}
  handlerType="NativeViewGestureHandler"
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="radioButton"
  touchSoundDisabled={false}
>
  <View
    accessible={true}
    collapsable={false}
    style={
      {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "gap": 8,
        "opacity": 1,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "white",
          "borderColor": "#d81e8b",
          "borderRadius": 999,
          "borderWidth": 2,
          "display": "flex",
          "padding": 3.5,
        }
      }
      testID="radioButtonCircle"
    >
      <View
        style={
          {
            "backgroundColor": "#d81e8b",
            "borderRadius": 7,
            "height": 14,
            "width": 14,
          }
        }
        testID="radioButtonCircleInner"
      />
    </View>
    <Text
      style={
        {
          "color": "#000000",
          "display": "flex",
          "flexDirection": "row",
          "fontSize": 14,
        }
      }
      testID="radioButtonLabel"
    />
  </View>
</RNGestureHandlerButton>
`;

exports[`RadioButton render tests should render the radio button 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  delayLongPress={600}
  enabled={true}
  exclusive={true}
  handlerTag={1}
  handlerType="NativeViewGestureHandler"
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="radioButton"
  touchSoundDisabled={false}
>
  <View
    accessible={true}
    collapsable={false}
    style={
      {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "gap": 8,
        "opacity": 1,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "white",
          "borderColor": "#d81e8b",
          "borderRadius": 999,
          "borderWidth": 2,
          "display": "flex",
          "padding": 3.5,
        }
      }
      testID="radioButtonCircle"
    >
      <View
        style={
          {
            "backgroundColor": "transparent",
            "borderRadius": 7,
            "height": 14,
            "width": 14,
          }
        }
        testID="radioButtonCircleInner"
      />
    </View>
    <Text
      style={
        {
          "color": "#000000",
          "display": "flex",
          "flexDirection": "row",
          "fontSize": 14,
        }
      }
      testID="radioButtonLabel"
    />
  </View>
</RNGestureHandlerButton>
`;

exports[`RadioButton render tests should render the radio button selected 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  delayLongPress={600}
  enabled={true}
  exclusive={true}
  handlerTag={2}
  handlerType="NativeViewGestureHandler"
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="radioButton"
  touchSoundDisabled={false}
>
  <View
    accessible={true}
    collapsable={false}
    style={
      {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "gap": 8,
        "opacity": 1,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "white",
          "borderColor": "#d81e8b",
          "borderRadius": 999,
          "borderWidth": 2,
          "display": "flex",
          "padding": 3.5,
        }
      }
      testID="radioButtonCircle"
    >
      <View
        style={
          {
            "backgroundColor": "#d81e8b",
            "borderRadius": 7,
            "height": 14,
            "width": 14,
          }
        }
        testID="radioButtonCircleInner"
      />
    </View>
    <Text
      style={
        {
          "color": "#000000",
          "display": "flex",
          "flexDirection": "row",
          "fontSize": 14,
        }
      }
      testID="radioButtonLabel"
    />
  </View>
</RNGestureHandlerButton>
`;

exports[`RadioButton render tests should render the radio button with label 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  delayLongPress={600}
  enabled={true}
  exclusive={true}
  handlerTag={3}
  handlerType="NativeViewGestureHandler"
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="radioButton"
  touchSoundDisabled={false}
>
  <View
    accessible={true}
    collapsable={false}
    style={
      {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "gap": 8,
        "opacity": 1,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "white",
          "borderColor": "#d81e8b",
          "borderRadius": 999,
          "borderWidth": 2,
          "display": "flex",
          "padding": 3.5,
        }
      }
      testID="radioButtonCircle"
    >
      <View
        style={
          {
            "backgroundColor": "transparent",
            "borderRadius": 7,
            "height": 14,
            "width": 14,
          }
        }
        testID="radioButtonCircleInner"
      />
    </View>
    <Text
      style={
        {
          "color": "#000000",
          "display": "flex",
          "flexDirection": "row",
          "fontSize": 14,
        }
      }
      testID="radioButtonLabel"
    >
      Test
    </Text>
  </View>
</RNGestureHandlerButton>
`;

exports[`RadioButton render tests should render the radio button with label and selected 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  delayLongPress={600}
  enabled={true}
  exclusive={true}
  handlerTag={4}
  handlerType="NativeViewGestureHandler"
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="radioButton"
  touchSoundDisabled={false}
>
  <View
    accessible={true}
    collapsable={false}
    style={
      {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "gap": 8,
        "opacity": 1,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "white",
          "borderColor": "#d81e8b",
          "borderRadius": 999,
          "borderWidth": 2,
          "display": "flex",
          "padding": 3.5,
        }
      }
      testID="radioButtonCircle"
    >
      <View
        style={
          {
            "backgroundColor": "#d81e8b",
            "borderRadius": 7,
            "height": 14,
            "width": 14,
          }
        }
        testID="radioButtonCircleInner"
      />
    </View>
    <Text
      style={
        {
          "color": "#000000",
          "display": "flex",
          "flexDirection": "row",
          "fontSize": 14,
        }
      }
      testID="radioButtonLabel"
    >
      Test
    </Text>
  </View>
</RNGestureHandlerButton>
`;

exports[`RadioButton render tests should render the radio button with label and size 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  delayLongPress={600}
  enabled={true}
  exclusive={true}
  handlerTag={5}
  handlerType="NativeViewGestureHandler"
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="radioButton"
  touchSoundDisabled={false}
>
  <View
    accessible={true}
    collapsable={false}
    style={
      {
        "alignItems": "center",
        "display": "flex",
        "flexDirection": "row",
        "gap": 8,
        "opacity": 1,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "white",
          "borderColor": "#d81e8b",
          "borderRadius": 999,
          "borderWidth": 2,
          "display": "flex",
          "padding": 5,
        }
      }
      testID="radioButtonCircle"
    >
      <View
        style={
          {
            "backgroundColor": "transparent",
            "borderRadius": 10,
            "height": 20,
            "width": 20,
          }
        }
        testID="radioButtonCircleInner"
      />
    </View>
    <Text
      style={
        {
          "color": "#000000",
          "display": "flex",
          "flexDirection": "row",
          "fontSize": 20,
        }
      }
      testID="radioButtonLabel"
    >
      Test
    </Text>
  </View>
</RNGestureHandlerButton>
`;
