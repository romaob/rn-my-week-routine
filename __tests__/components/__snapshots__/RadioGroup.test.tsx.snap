// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RadioGroup onPress tests should call the callback function with the right value when pressing a radio button 1`] = `
<View
  style={
    {
      "display": "flex",
      "gap": 16,
      "justifyContent": "center",
      "paddingVertical": 16,
    }
  }
  testID="radioGroup"
>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={13}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label1
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={14}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "#d81e8b",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label2
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={15}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label3
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`RadioGroup render tests should render the radio group using the values when not having labels 1`] = `
<View
  style={
    {
      "display": "flex",
      "gap": 16,
      "justifyContent": "center",
      "paddingVertical": 16,
    }
  }
  testID="radioGroup"
>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={10}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        item1
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={11}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "#d81e8b",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        item2
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={12}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        item3
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`RadioGroup render tests should render the radio group with label 1`] = `
<View
  style={
    {
      "display": "flex",
      "gap": 16,
      "justifyContent": "center",
      "paddingVertical": 16,
    }
  }
  testID="radioGroup"
>
  <Text
    style={
      {
        "color": "#000000",
        "display": "flex",
        "flexDirection": "row",
        "fontSize": 14,
      }
    }
    testID="radioGroupLabel"
  >
    label
  </Text>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={1}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label1
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={2}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "#d81e8b",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label2
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={3}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label3
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`RadioGroup render tests should render the radio group without label 1`] = `
<View
  style={
    {
      "display": "flex",
      "gap": 16,
      "justifyContent": "center",
      "paddingVertical": 16,
    }
  }
  testID="radioGroup"
>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={4}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label1
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={5}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "#d81e8b",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label2
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={6}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label3
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`RadioGroup render tests should render the radio group without selection 1`] = `
<View
  style={
    {
      "display": "flex",
      "gap": 16,
      "justifyContent": "center",
      "paddingVertical": 16,
    }
  }
  testID="radioGroup"
>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={7}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label1
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={8}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label2
      </Text>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={9}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    testID="radioButton"
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "gap": 8,
          "opacity": 1,
        }
      }
    >
      <View
        style={
          {
            "backgroundColor": "white",
            "borderColor": "#d81e8b",
            "borderRadius": 999,
            "borderWidth": 2,
            "display": "flex",
            "padding": 5,
          }
        }
        testID="radioButtonCircle"
      >
        <View
          style={
            {
              "backgroundColor": "transparent",
              "borderRadius": 10,
              "height": 20,
              "width": 20,
            }
          }
          testID="radioButtonCircleInner"
        />
      </View>
      <Text
        style={
          {
            "color": "#000000",
            "display": "flex",
            "flexDirection": "row",
            "fontSize": 20,
          }
        }
        testID="radioButtonLabel"
      >
        label3
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;
